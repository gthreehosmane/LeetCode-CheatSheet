Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false

*******************************************************************************

class Solution {
    public boolean isSubsequence(String s, String t) {
        int sindex = 0; 
        int tindex = 0;
        if(s.length() == 0)
        return true;
        /**
        
        check if all the characters of subsequence are present in the main string, but the relative order of characters should be same
         */
        while(tindex<t.length()){
            if(s.charAt(sindex) == t.charAt(tindex)){
                sindex++;
                if(sindex == s.length())
                return true;
            }
            tindex++;
        }
        return false;

    }
}
