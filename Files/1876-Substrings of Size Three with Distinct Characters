*************************************************************************************************************
A string is good if there are no repeated characters.

Given a string s​​​​​, return the number of good substrings of length three in s​​​​​​.

Note that if there are multiple occurrences of the same substring, every occurrence should be counted.

A substring is a contiguous sequence of characters in a string.

 

Example 1:

Input: s = "xyzzaz"
Output: 1
Explanation: There are 4 substrings of size 3: "xyz", "yzz", "zza", and "zaz". 
The only good substring of length 3 is "xyz".
Example 2:

Input: s = "aababcabc"
Output: 4
Explanation: There are 7 substrings of size 3: "aab", "aba", "bab", "abc", "bca", "cab", and "abc".
The good substrings are "abc", "bca", "cab", and "abc".

*************************************************************************************************************


class Solution {
    public int countGoodSubstrings(String s) {
        int i=0,j=0;
        int count = 0;
        while(j<s.length()){
            //use 2 pointer approach
            /** check in each substring of length 3 if all characters are different */
            if(j-i+1 == 3){
                if(s.charAt(i)!=s.charAt(i+1) && s.charAt(i)!=s.charAt(i+2) && s.charAt(i+2)!=s.charAt(i+1))
                    count++;
                i++;//move the left end pointer
            }
            else//move the right end pointer
            j++;
        }
        return count;
    }
}
