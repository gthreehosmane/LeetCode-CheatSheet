****************************************************************************
Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.
Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.

****************************************************************************

class Solution {
    public int strStr(String haystack, String needle) {
        int hlen = haystack.length();
        int nlen = needle.length();
        int nindex=0;
        /**
        
        Have two pointers one for needle and one for hay
        check if characters at both pointers are same. If yes, move both pointers
        if not reset the needle index and revert the hay index to where the current needle comparison started

        if the needle pointer is equal to length of needle, we found a match;

         */

         for(int i=0;i<hlen;i++){
             if(haystack.charAt(i) == needle.charAt(nindex))
             nindex++;

             else{
                 i=i-nindex;
                 nindex=0;
             }

             if(nindex == nlen)
             return i-nlen+1;

         }
         return -1;
    }
}
